{
  "version": 3,
  "sources": ["../../../../node_modules/new-github-issue-url/index.js", "../../../../node_modules/electron-util/source/is-using-asar.js", "../../../../node_modules/electron-util/node.js", "../../../../node_modules/electron-util/source/api.js", "../../../../node_modules/electron-is-dev/index.js", "../../../../node_modules/electron-util/source/is.js", "../../../../node_modules/electron-util/source/enforce-macos-app-location.js", "../../../../node_modules/electron-util/source/open-system-preferences.js", "../../../../node_modules/electron-util/index.js", "../../src/main/main.ts", "../../src/main/createMenu.ts", "../../src/main/createWindow.ts", "../../src/main/preload.ts"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = (options = {}) => {\n\tlet repoUrl;\n\tif (options.repoUrl) {\n\t\trepoUrl = options.repoUrl;\n\t} else if (options.user && options.repo) {\n\t\trepoUrl = `https://github.com/${options.user}/${options.repo}`;\n\t} else {\n\t\tthrow new Error('You need to specify either the `repoUrl` option or both the `user` and `repo` options');\n\t}\n\n\tconst url = new URL(`${repoUrl}/issues/new`);\n\n\tconst types = [\n\t\t'body',\n\t\t'title',\n\t\t'labels',\n\t\t'template',\n\t\t'milestone',\n\t\t'assignee',\n\t\t'projects'\n\t];\n\n\tfor (const type of types) {\n\t\tlet value = options[type];\n\t\tif (value === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (type === 'labels' || type === 'projects') {\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\tthrow new TypeError(`The \\`${type}\\` option should be an array`);\n\t\t\t}\n\n\t\t\tvalue = value.join(',');\n\t\t}\n\n\t\turl.searchParams.set(type, value);\n\t}\n\n\treturn url.toString();\n};\n\n// TODO: Remove this for the next major release\nmodule.exports.default = module.exports;\n", "'use strict';\n\nconst isElectron = 'electron' in process.versions;\n\nmodule.exports = isElectron && require.main && require.main.filename && require.main.filename.includes('app.asar');\n", "'use strict';\n\nexports.isElectron = 'electron' in process.versions;\n\nexports.electronVersion = process.versions.electron || '0.0.0';\n\nexports.isUsingAsar = require('./source/is-using-asar');\n\nexports.fixPathForAsarUnpack = path => exports.isUsingAsar ? path.replace('app.asar', 'app.asar.unpacked') : path;\n", "'use strict';\nconst electron = require('electron');\n\nmodule.exports = new Proxy(electron, {\n\tget: (target, property) => target[property] || (target.remote ? target.remote[property] : undefined)\n});\n", "'use strict';\nconst electron = require('electron');\n\nif (typeof electron === 'string') {\n\tthrow new TypeError('Not running in an Electron environment!');\n}\n\nconst app = electron.app || electron.remote.app;\n\nconst isEnvSet = 'ELECTRON_IS_DEV' in process.env;\nconst getFromEnv = parseInt(process.env.ELECTRON_IS_DEV, 10) === 1;\n\nmodule.exports = isEnvSet ? getFromEnv : !app.isPackaged;\n", "'use strict';\nconst isDev = require('electron-is-dev');\nconst isUsingAsar = require('./is-using-asar');\n\nmodule.exports = {\n\tmacos: process.platform === 'darwin',\n\tlinux: process.platform === 'linux',\n\twindows: process.platform === 'win32',\n\tmain: process.type === 'browser',\n\trenderer: process.type === 'renderer',\n\tusingAsar: isUsingAsar,\n\tdevelopment: isDev,\n\tmacAppStore: process.mas === true,\n\twindowsStore: process.windowsStore === true\n};\n", "'use strict';\nconst api = require('./api');\nconst is = require('./is');\n\nmodule.exports = () => {\n\tif (is.development || !is.macos) {\n\t\treturn;\n\t}\n\n\tif (api.app.isInApplicationsFolder()) {\n\t\treturn;\n\t}\n\n\tconst appName = 'name' in api.app ? api.app.name : api.app.getName();\n\n\tconst clickedButtonIndex = api.dialog.showMessageBoxSync({\n\t\ttype: 'error',\n\t\tmessage: 'Move to Applications folder?',\n\t\tdetail: `${appName} must live in the Applications folder to be able to run correctly.`,\n\t\tbuttons: [\n\t\t\t'Move to Applications folder',\n\t\t\t`Quit ${appName}`\n\t\t],\n\t\tdefaultId: 0,\n\t\tcancelId: 1\n\t});\n\n\tif (clickedButtonIndex === 1) {\n\t\tapi.app.quit();\n\t\treturn;\n\t}\n\n\tapi.app.moveToApplicationsFolder({\n\t\tconflictHandler: conflict => {\n\t\t\tif (conflict === 'existsAndRunning') { // Can't replace the active version of the app\n\t\t\t\tapi.dialog.showMessageBoxSync({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: `Another version of ${api.app.getName()} is currently running. Quit it, then launch this version of the app again.`,\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t'OK'\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tapi.app.quit();\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t});\n};\n", "'use strict';\nconst api = require('./api');\nconst is = require('./is');\n\nmodule.exports = async (pane, section) => {\n\tif (is.macos) {\n\t\tawait api.shell.openExternal(`x-apple.systempreferences:com.apple.preference.${pane}${section ? `?${section}` : ''}`);\n\t} else if (is.windows) {\n\t\tawait api.shell.openExternal(`ms-settings:${pane}`);\n\t}\n};\n", "'use strict';\nconst os = require('os');\nconst path = require('path');\nconst electron = require('electron');\nconst newGithubIssueUrl = require('new-github-issue-url');\nconst node = require('./node');\n\nconst api = require('./source/api');\n\nexports.api = api;\n\nconst is = require('./source/is');\n\nexports.is = is;\n\nexports.electronVersion = node.electronVersion;\n\nexports.chromeVersion = process.versions.chrome.replace(/\\.\\d+$/, '');\n\nexports.platform = object => {\n\tlet {platform} = process;\n\n\tif (platform === 'darwin') {\n\t\tplatform = 'macos';\n\t} else if (platform === 'win32') {\n\t\tplatform = 'windows';\n\t}\n\n\tconst fn = platform in object ? object[platform] : object.default;\n\n\treturn typeof fn === 'function' ? fn() : fn;\n};\n\nconst activeWindow = () => is.main ?\n\telectron.BrowserWindow.getFocusedWindow() :\n\telectron.remote.getCurrentWindow();\n\nexports.activeWindow = activeWindow;\n\nexports.runJS = (code, win = activeWindow()) => win.webContents.executeJavaScript(code);\n\nexports.fixPathForAsarUnpack = node.fixPathForAsarUnpack;\n\nexports.enforceMacOSAppLocation = require('./source/enforce-macos-app-location');\n\nexports.menuBarHeight = () => is.macos ? api.screen.getPrimaryDisplay().workArea.y : 0;\n\nexports.getWindowBoundsCentered = options => {\n\toptions = {\n\t\twindow: activeWindow(),\n\t\t...options\n\t};\n\n\tconst currentDisplay = api.screen.getDisplayNearestPoint(api.screen.getCursorScreenPoint());\n\tconst [width, height] = options.window.getSize();\n\tconst windowSize = options.size || {width, height};\n\tconst screenSize = options.useFullBounds ?\n\t\tcurrentDisplay.bounds :\n\t\tcurrentDisplay.workArea;\n\tconst x = Math.floor(screenSize.x + ((screenSize.width / 2) - (windowSize.width / 2)));\n\tconst y = Math.floor(((screenSize.height + screenSize.y) / 2) - (windowSize.height / 2));\n\n\treturn {\n\t\tx,\n\t\ty,\n\t\twidth: windowSize.width,\n\t\theight: windowSize.height\n\t};\n};\n\nexports.centerWindow = options => {\n\toptions = {\n\t\twindow: activeWindow(),\n\t\tanimated: false,\n\t\t...options\n\t};\n\n\tconst bounds = exports.getWindowBoundsCentered(options);\n\toptions.window.setBounds(bounds, options.animated);\n};\n\nexports.disableZoom = (win = activeWindow()) => {\n\tconst {webContents} = win;\n\n\tconst run = () => {\n\t\twebContents.setZoomFactor(1);\n\t\twebContents.setLayoutZoomLevelLimits(0, 0);\n\t};\n\n\twebContents.on('did-finish-load', run);\n\trun();\n};\n\nexports.appLaunchTimestamp = Date.now();\n\nif (is.main) {\n\tconst isFirstAppLaunch = () => {\n\t\tconst fs = require('fs');\n\t\tconst checkFile = path.join(api.app.getPath('userData'), '.electron-util--has-app-launched');\n\n\t\tif (fs.existsSync(checkFile)) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tfs.writeFileSync(checkFile, '');\n\t\t} catch (error) {\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\tfs.mkdirSync(api.app.getPath('userData'));\n\t\t\t\treturn isFirstAppLaunch();\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\n\texports.isFirstAppLaunch = isFirstAppLaunch;\n}\n\nexports.darkMode = {\n\tget isEnabled() {\n\t\tif (!is.macos) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn api.nativeTheme.shouldUseDarkColors;\n\t},\n\n\tonChange(callback) {\n\t\tif (!is.macos) {\n\t\t\treturn () => {};\n\t\t}\n\n\t\tconst handler = () => {\n\t\t\tcallback();\n\t\t};\n\n\t\tapi.nativeTheme.on('updated', handler);\n\n\t\treturn () => {\n\t\t\tapi.nativeTheme.off(handler);\n\t\t};\n\t}\n};\n\nexports.setContentSecurityPolicy = async (policy, options) => {\n\tawait api.app.whenReady();\n\n\tif (!policy.split('\\n').filter(line => line.trim()).every(line => line.endsWith(';'))) {\n\t\tthrow new Error('Each line must end in a semicolon');\n\t}\n\n\tpolicy = policy.replace(/[\\t\\n]/g, '').trim();\n\n\toptions = {\n\t\tsession: api.session.defaultSession,\n\t\t...options\n\t};\n\n\toptions.session.webRequest.onHeadersReceived((details, callback) => {\n\t\tcallback({\n\t\t\tresponseHeaders: {\n\t\t\t\t...details.responseHeaders,\n\t\t\t\t'Content-Security-Policy': [policy]\n\t\t\t}\n\t\t});\n\t});\n};\n\nexports.openNewGitHubIssue = options => {\n\tconst url = newGithubIssueUrl(options);\n\tapi.shell.openExternal(url);\n};\n\nexports.openUrlMenuItem = (options = {}) => {\n\tif (!options.url) {\n\t\tthrow new Error('The `url` option is required');\n\t}\n\n\tconst {url} = options;\n\tdelete options.url;\n\n\tconst click = (...args) => {\n\t\tif (options.click) {\n\t\t\toptions.click(...args);\n\t\t}\n\n\t\tapi.shell.openExternal(url);\n\t};\n\n\treturn {\n\t\t...options,\n\t\tclick\n\t};\n};\n\nexports.showAboutWindow = (options = {}) => {\n\t// TODO: When https://github.com/electron/electron/issues/18918 is fixed,\n\t// these defaults should not need to be set for Linux.\n\t// TODO: The defaults are standardized here, instead of being set in\n\t// Electron when https://github.com/electron/electron/issues/23851 is fixed.\n\n\tconst appName = api.app.getName();\n\tconst appVersion = api.app.getVersion();\n\n\tconst aboutPanelOptions = {\n\t\tapplicationName: appName,\n\t\tapplicationVersion: appVersion\n\t};\n\n\tif (options.icon) {\n\t\taboutPanelOptions.iconPath = options.icon;\n\t}\n\n\tif (options.copyright) {\n\t\taboutPanelOptions.copyright = options.copyright;\n\t}\n\n\tif (options.text) {\n\t\taboutPanelOptions.copyright = (options.copyright || '') + '\\n\\n' + options.text;\n\t}\n\n\tif (options.website) {\n\t\taboutPanelOptions.website = options.website;\n\t}\n\n\tapi.app.setAboutPanelOptions(aboutPanelOptions);\n\tapi.app.showAboutPanel();\n};\n\nexports.aboutMenuItem = (options = {}) => {\n\toptions = {\n\t\ttitle: 'About',\n\t\t...options\n\t};\n\n\t// TODO: When https://github.com/electron/electron/issues/15589 is fixed,\n\t// handle the macOS case here, so the user doesn't need a conditional\n\t// when used in a cross-platform app\n\n\treturn {\n\t\tlabel: `${options.title} ${api.app.getName()}`,\n\t\tclick() {\n\t\t\texports.showAboutWindow(options);\n\t\t}\n\t};\n};\n\nexports.debugInfo = () => `\n${api.app.getName()} ${api.app.getVersion()}\nElectron ${exports.electronVersion}\n${process.platform} ${os.release()}\nLocale: ${api.app.getLocale()}\n`.trim();\n\nexports.appMenu = (menuItems = []) => {\n\t// TODO: When https://github.com/electron/electron/issues/15589 is fixed,\n\t// handle the macOS case here, so the user doesn't need a conditional\n\t// when used in a cross-platform app\n\n\treturn {\n\t\tlabel: api.app.getName(),\n\t\tsubmenu: [\n\t\t\t{\n\t\t\t\trole: 'about'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t...menuItems,\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\trole: 'services'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\trole: 'hide'\n\t\t\t},\n\t\t\t{\n\t\t\t\trole: 'hideothers'\n\t\t\t},\n\t\t\t{\n\t\t\t\trole: 'unhide'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\trole: 'quit'\n\t\t\t}\n\t\t].filter(Boolean)\n\t};\n};\n\nexports.openSystemPreferences = require('./source/open-system-preferences');\n\n// TODO: Move more of the larger methods here into separate files.\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { app, BrowserWindow } from 'electron'\nimport { is } from 'electron-util'\nimport type { Message } from 'src/types'\nimport { createMenu } from './createMenu'\nimport { createWindow } from './createWindow'\nimport './preload'\n\nlet win: BrowserWindow | null = null\n\nasync function main() {\n  win = await createWindow()\n\n  async function send(message: Message) {\n    win!.webContents.send('projectMsg', message)\n  }\n\n  await createMenu(send)\n}\n\napp\n  .on('ready', main)\n  .on('window-all-closed', () => {\n    if (!is.macos) {\n      app.quit()\n    }\n  })\n  .on('activate', () => {\n    if (win === null && app.isReady()) {\n      main()\n    }\n  })\n", "import { shell, app, Menu, MenuItemConstructorOptions } from 'electron'\nimport type { Message } from 'src/types'\n\nexport async function createMenu(send: (message: Message) => Promise<void>) {\n  const isMac = process.platform === 'darwin'\n\n  const template: MenuItemConstructorOptions[] = []\n\n  // About Menu (mac only)\n  if (isMac) {\n    template.push({\n      label: 'Hello world!',\n      submenu: [\n        { role: 'about' },\n        { type: 'separator' },\n        { role: 'services' },\n        { type: 'separator' },\n        { role: 'hide' },\n        { role: 'hideOthers' },\n        { role: 'unhide' },\n        { type: 'separator' },\n        { role: 'quit' },\n      ],\n    })\n  }\n\n  // File Menu\n  template.push({\n    label: 'File',\n    submenu: [\n      { label: 'New Project', click: () => send({ type: 'undo' }) },\n      { type: 'separator' },\n      { label: 'Open...', click: () => send({ type: 'redo' }) },\n      { type: 'separator' },\n      { label: 'Save', click: () => send({ type: 'redo' }) },\n      { label: 'Save As...', click: () => send({ type: 'redo' }) },\n      { type: 'separator' },\n      { role: 'quit' },\n    ],\n  })\n\n  // Edit Menu\n  template.push({\n    label: 'Edit',\n    submenu: [\n      { label: 'Undo', click: () => send({ type: 'undo' }), accelerator: 'CmdOrCtrl+Z' },\n      { label: 'Redo', click: () => send({ type: 'redo' }), accelerator: 'CmdOrCtrl+Shift+Z' },\n      { type: 'separator' },\n      { label: 'Cut', click: () => send({ type: 'cut' }), accelerator: 'CmdOrCtrl+X' },\n      { label: 'Copy', click: () => send({ type: 'copy' }), accelerator: 'CmdOrCtrl+C' },\n      { label: 'Paste', click: () => send({ type: 'paste' }), accelerator: 'CmdOrCtrl+V' },\n      { label: 'Delete', click: () => send({ type: 'delete' }), accelerator: 'Delete' },\n      { label: 'Select All', click: () => send({ type: 'selectAll' }), accelerator: 'CmdOrCtrl+A' },\n      { label: 'Select None', click: () => send({ type: 'selectNone' }) },\n    ],\n  })\n\n  // View Menu\n  template.push({\n    label: 'View',\n    submenu: [\n      { role: 'reload' },\n      { role: 'forceReload' },\n      { role: 'toggleDevTools' },\n      { type: 'separator' },\n      {\n        label: 'Actual Size',\n        click: () => send({ type: 'resetZoom' }),\n      },\n      { label: 'Zoom In', click: () => send({ type: 'zoomIn' }) },\n      { label: 'Zoom Out', click: () => send({ type: 'zoomOut' }) },\n      { label: 'Zoom to Fit', click: () => send({ type: 'zoomToFit' }) },\n      { label: 'Zoom to Selection', click: () => send({ type: 'zoomToSelection' }) },\n      { type: 'separator' },\n      { role: 'togglefullscreen' },\n    ],\n  })\n\n  // Window Menu\n  if (isMac) {\n    template.push({\n      label: 'Window',\n      submenu: [\n        { role: 'minimize' },\n        { role: 'zoom' },\n        { type: 'separator' },\n        { role: 'front' },\n        { type: 'separator' },\n        { role: 'window' },\n      ],\n    })\n  } else {\n    template.push({\n      label: 'Window',\n      submenu: [{ role: 'minimize' }, { role: 'zoom' }, { role: 'close' }],\n    })\n  }\n\n  template.push({\n    role: 'help',\n    submenu: [\n      {\n        label: 'Learn More',\n        click: async () => {\n          await shell.openExternal('https://electronjs.org')\n        },\n      },\n    ],\n  })\n\n  const menu = Menu.buildFromTemplate(template)\n\n  Menu.setApplicationMenu(menu)\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport path from 'path'\nimport { format } from 'url'\nimport { BrowserWindow } from 'electron'\nimport { is } from 'electron-util'\n\nexport async function createWindow() {\n  let win: BrowserWindow | null = null\n\n  win = new BrowserWindow({\n    width: 720,\n    height: 450,\n    minHeight: 480,\n    minWidth: 600,\n    titleBarStyle: 'hidden',\n    title: 'Tldraw',\n    webPreferences: {\n      nodeIntegration: true,\n      devTools: true,\n      preload: path.join(__dirname, 'preload.js'),\n    },\n    frame: false,\n    show: false,\n  })\n\n  win.setWindowButtonVisibility(false)\n\n  const isDev = is.development\n\n  if (isDev) {\n    win.loadURL('http://localhost:9080')\n  } else {\n    win.loadURL(path.join(__dirname, 'index.html'))\n  }\n\n  win.setPosition(0, 0, false)\n  win.setSize(700, 1200)\n\n  win.on('closed', () => {\n    win = null\n  })\n\n  win.webContents.on('devtools-opened', () => {\n    win!.focus()\n  })\n\n  win.on('ready-to-show', () => {\n    win!.show()\n\n    if (isDev) {\n      win!.webContents.openDevTools({ mode: 'bottom' })\n    } else {\n      win!.focus()\n    }\n  })\n\n  return win\n}\n", "import { contextBridge, ipcRenderer } from 'electron'\nimport type { Message, TldrawBridgeApi } from 'src/types'\n\nconst api: TldrawBridgeApi = {\n  send: (channel: string, data: Message) => {\n    ipcRenderer.send(channel, data)\n  },\n  on: (channel, cb) => {\n    ipcRenderer.on(channel, (event, message) => cb(message as Message))\n  },\n}\n\ncontextBridge?.exposeInMainWorld('TldrawBridgeApi', api)\n\nexport {}\n"],
  "mappings": "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",
  "names": []
}
